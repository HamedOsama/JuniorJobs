---
const navigation = [
{
    name: "Home",
    href: "/",
  },
  {
    name: "Add Suggestion",
    href: "/suggestion",
  },
  {
    name: "Report a Problem",
    href: "/issue",
  },
]
const pathname=Astro.url.pathname
---
<nav class="bg-background fixed w-full z-20 top-0 left-0">
    <div class="max-w-screen-xl flex flex-wrap items-center justify-between mx-auto p-4">
    <a href="/" class="flex items-center">
        <img src="images/logo.svg" class="h-8 mr-3" alt="zJunior Logo">
    </a>
    <div class="flex md:order-2">
        <button type="button" class="btn-3d actions flex h-9 items-center" >Sign Up</button>
        <button id="menuToggle" data-collapse-target="#navbar-sticky" data-collapse-toggle="navbar-sticky" type="button" class="inline-flex ml-4 items-center p-2 w-10 h-10 justify-center text-sm text-gray-500 rounded-lg md:hidden" aria-controls="navbar-sticky" aria-expanded="false">
          <span class="sr-only">Open main menu</span>
          <svg class="w-5 h-5 text-accent" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 17 14">
              <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 1h15M1 7h15M1 13h15"/>
          </svg>
      </button>
    </div>
    <div class="items-center justify-between hidden w-full md:flex md:w-auto md:order-1" id="navbar-sticky">
      <ul class="flex flex-col p-4 md:p-0 mt-4 font-medium rounded-lg md:flex-row md:space-x-8 md:mt-0">
        {navigation.map((item) => (
            <li class="">
              <a
                class={`flex px-2 xs:px-3 py-2 duration-150 text-sm hover:text-accent
                ${pathname === item.href ? "text-accent" : ""}`}
                href={item.href}
              >
                {item.name}
              </a>
            </li>
          ))}
      </ul>
    </div>
    </div>
</nav>

<script>
    document.addEventListener("DOMContentLoaded", function () {
  const menuToggle = document.getElementById("menuToggle");
  const menuTarget = document.querySelector(menuToggle?.getAttribute("data-collapse-target")||'null');

  menuToggle?.addEventListener("click", function () {
    menuTarget?.classList.toggle("hidden");
    const expanded = menuToggle.getAttribute("aria-expanded") === "true" || false;
    menuToggle.setAttribute("aria-expanded", "false");
  });
});
</script>